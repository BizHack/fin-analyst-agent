version: '3.8'

services:
  # Main Flask application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@postgres:5432/${PGDATABASE}
      - MONGODB_URI=mongodb://mongoadmin:mongopass@mongodb:27017
      - VECTORDB_URL=http://vectordb:8080
      - MCP_SERVER_URL=http://mcp-server:8000
      - MCP_CLIENT_URL=http://mcp-client:8001
      - BACKEND_API_URL=http://backend-api:8888
    volumes:
      - .:/app
    depends_on:
      - postgres
      - mongodb
      - vectordb
      - mcp-server
      - mcp-client
      - backend-api
    restart: always

  # MCP Server - Data Gathering
  mcp-server:
    build:
      context: ./services/mcp-server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongoadmin:mongopass@mongodb:27017
    volumes:
      - ./services/mcp-server:/app
    depends_on:
      - mongodb
    restart: always

  # MCP Client - Data Processing
  mcp-client:
    build:
      context: ./services/mcp-client
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - MONGODB_URI=mongodb://mongoadmin:mongopass@mongodb:27017
      - VECTORDB_URL=http://vectordb:8080
      - MCP_SERVER_URL=http://mcp-server:8000
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./services/mcp-client:/app
    depends_on:
      - mongodb
      - vectordb
      - mcp-server
    restart: always

  # Backend API - API Gateway
  backend-api:
    build:
      context: ./services/backend-api
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      - MONGODB_URI=mongodb://mongoadmin:mongopass@mongodb:27017
      - VECTORDB_URL=http://vectordb:8080
      - SECRET_KEY=${SECRET_KEY:-placeholder_secret_key_change_in_production}
    volumes:
      - ./services/backend-api:/app
    depends_on:
      - mongodb
      - vectordb
    restart: always

  # PostgreSQL Database
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  # MongoDB for document storage
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=mongopass
    volumes:
      - mongodb_data:/data/db
    restart: always

  # ChromaDB for vector embeddings
  vectordb:
    image: chromadb/chroma:latest
    ports:
      - "8080:8080"
    volumes:
      - chroma_data:/chroma/chroma
    restart: always

volumes:
  postgres_data:
  mongodb_data:
  chroma_data: